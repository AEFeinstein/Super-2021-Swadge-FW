version: 2.1

parameters:
  src-repo-url:
    type: string
    default: https://github.com/AEFeinstein/Super-2021-Swadge-FW-Sandbox.git
  common-build-params:
    type: string
    default: "--disable-shared --disable-static"

jobs:
  build:
    docker:
      - image: cimg/base:2020.01
    parameters:
      label:
        type: string
        default: swadge-chainsaw
    steps:
      - run:
          name: Update packages
          command: sudo apt-get update
      - run:
          name: Install dependencies
          command: sudo apt-get -y install build-essential make curl unrar-free autoconf automake libtool gcc g++ gperf flex bison texinfo gawk ncurses-dev libexpat-dev sed git unzip bash help2man wget bzip2 libtool-bin python-dev python python-serial python3-pip zip
      - run:
          name: Install python dependencies
          command: pip3 install pillow rtttl
      - run:
          name: Download toolchain
          command: wget https://github.com/cnlohr/esp82xx_bin_toolchain/raw/master/esp-open-sdk-x86_64-20200810.tar.xz
      - run:
          name: Unzip toolchain
          command: tar xJvf esp-open-sdk-x86_64-20200810.tar.xz
      - run:
          name: Set SDK environment variable
          command: echo 'export ESP_ROOT=$HOME/project/esp-open-sdk' >> $BASH_ENV
      - run:
          name: Append xtenxa bin to PATH
          command: echo 'export PATH=$HOME/project/esp-open-sdk/xtensa-lx106-elf/bin:$PATH' >> $BASH_ENV
      - run:
          name: Clone Repository
          command: git clone << pipeline.parameters.src-repo-url >> --recurse-submodules
      - run:
          name: Build Swadge
          working_directory: Super-2021-Swadge-FW-Sandbox/firmware
          command: unset ESP_GDB && export SET_SWADGE_VERSION=5 && make -j$(nproc) all debug
      - run:
          name: Store version information
          command: echo $(date) >> version.txt && echo "https://github.com/AEFeinstein/Super-2021-Swadge-FW-Sandbox/commit/${CIRCLE_SHA1}" >> version.txt
      - run:
          name: Create a ZIP of firmware
          working_directory: Super-2021-Swadge-FW-Sandbox/firmware
          command: zip -j << parameters.label >>.zip version.txt image* assets.bin ESP8266_NONOS_SDK/bin/blank.bin ESP8266_NONOS_SDK/bin/esp_init_data_default_v08.bin
      - run:
          name: Add pyFlashGui to the ZIP
          working_directory: Super-2021-Swadge-FW-Sandbox/pyFlashGui
          command: zip -r ../firmware/<< parameters.label >>.zip .
      - store_artifacts:
          path: Super-2021-Swadge-FW-Sandbox/firmware/<< parameters.label >>.zip

#  test-linux:
#    docker:
#      - image: cimg/base:stable
#    parameters:
#      label:
#        type: string
#        default: iperf3-linux
#    steps:
#      - attach_workspace:
#          at: ./
#      - run:
#          name: Extract << parameters.label >>.tar.xz
#          command: tar -xf << parameters.label >>.tar.xz
#      - run:
#          name: Test executable
#          command: << parameters.label >>/bin/iperf3 -v
#      - run:
#          name: Run as a server
#          command: << parameters.label >>/bin/iperf3 -s
#          background: true
#      - run:
#          name: Run as a client
#          command: << parameters.label >>/bin/iperf3 -c localhost -R

#  release:
#    executor: github-release/default
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: Compute version number
#          command: |
#            echo "export IPERF3_BUILD_VERSION=\"<< pipeline.parameters.branch-name>>-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}\"" | tee -a $BASH_ENV
#      - github-release/release:
#          tag: v$IPERF3_BUILD_VERSION
#          title: $IPERF3_BUILD_VERSION
#          artefacts-folder: .

workflows:
  version: 2
  build-test-release:
    jobs:
      - build
#      - test-linux:
#          requires:
#            - build
#      - release:
#          requires:
#            - test-linux
#          context: github
#          filters:
#            branches:
#              only: master

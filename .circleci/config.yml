version: 2.1

orbs:
  slack: circleci/slack@3.4.2

parameters:
  src-repo-url:
    type: string
    default: https://github.com/AEFeinstein/Super-2021-Swadge-FW-Sandbox.git
  windows-artifact:
    type: string
    default: swadge-chainsaw-windows.zip
  esp8266-artifact:
    type: string
    default: swadge-chainsaw-esp8266.zip
  common-build-params:
    type: string
    default: "--disable-shared --disable-static"

jobs:
  build-firmware:
    docker:
      - image: cimg/base:2020.01
    parameters:
      label:
        type: string
        default: swadge-chainsaw-firmware
    steps:
      - run:
          name: Update packages
          command: sudo apt-get update
      - run:
          name: Install dependencies
          command: sudo apt-get -y install build-essential make curl unrar-free autoconf automake libtool gcc g++ gperf flex bison texinfo gawk ncurses-dev libexpat-dev sed git unzip bash help2man wget bzip2 libtool-bin python-dev python python-serial python3-pip zip
      - run:
          name: Install python dependencies
          command: pip3 install pillow rtttl
      - run:
          name: Download toolchain
          command: wget https://github.com/cnlohr/esp82xx_bin_toolchain/raw/master/esp-open-sdk-x86_64-20200810.tar.xz
      - run:
          name: Unzip toolchain
          command: tar xJvf esp-open-sdk-x86_64-20200810.tar.xz
      - run:
          name: Set SDK environment variable
          command: echo 'export ESP_ROOT=$HOME/project/esp-open-sdk' >> $BASH_ENV
      - run:
          name: Append xtenxa bin to PATH
          command: echo 'export PATH=$HOME/project/esp-open-sdk/xtensa-lx106-elf/bin:$PATH' >> $BASH_ENV
      - run:
          name: Clone Repository
          command: git clone << pipeline.parameters.src-repo-url >> --recurse-submodules
      - run:
          name: Build Swadge
          working_directory: Super-2021-Swadge-FW-Sandbox/firmware
          command: unset ESP_GDB && export SET_SWADGE_VERSION=5 && make -j$(nproc) all debug
      - run:
          name: Store version information
          working_directory: Super-2021-Swadge-FW-Sandbox/firmware
          command: echo $(date) >> version.txt && echo "https://github.com/AEFeinstein/Super-2021-Swadge-FW-Sandbox/commit/${CIRCLE_SHA1}" >> version.txt
      - run:
          name: Create a ZIP of firmware
          working_directory: Super-2021-Swadge-FW-Sandbox/firmware
          command: zip -j << esp8266-artifact >> version.txt image* assets.bin ESP8266_NONOS_SDK/bin/blank.bin ESP8266_NONOS_SDK/bin/esp_init_data_default_v08.bin
      - run:
          name: Add pyFlashGui to the ZIP
          working_directory: Super-2021-Swadge-FW-Sandbox/pyFlashGui
          command: zip -r ../firmware/<< esp8266-artifact >> .
      - store_artifacts:
          path: Super-2021-Swadge-FW-Sandbox/firmware/<< esp8266-artifact >>
      - slack/status:
          fail_only: false
          success_message: "Fresh hot builds!\n:esp8266-icon: https://${CIRCLE_BUILD_NUM}-236183421-gh.circle-artifacts.com/0/Super-2021-Swadge-FW-Sandbox/firmware/<< esp8266-artifact >>\n:windows: https://${CIRCLE_BUILD_NUM}-236183421-gh.circle-artifacts.com/0/Super-2021-Swadge-FW-Sandbox/firmware/<< windows-artifact >>"

  build-windows:
    machine:
      image: windows-server-2019-vs2019:stable
      shell: bash.exe
    resource_class: windows.medium
    parameters:
      label:
        type: string
        default: swadge-chainsaw-windows
    steps:
      - run:
          name: Download Cygwin installer
          command: curl -sSJOL https://cygwin.com/setup-x86_64.exe
      - run:
          name: Install Cygwin and required packages
          shell: powershell.exe
          command: |
            .\setup-x86_64.exe -q -s https://mirrors.kernel.org/sourceware/cygwin/ -P git,gcc-core,make,zip,find,python3,python3-devel,python36-pip,python36-imaging
            $env:Path = "C:\cygwin64\bin\;" + $env:Path
      - run:
          name: Setup Python
          shell: C:\\cygwin64\\bin\\bash.exe --login -eo pipefail
          command: |
            alias python='python3'
            python3 -m pip install --upgrade pip
            python3 -m pip install rtttl
      - run:
          name: Clone and build Swadge
          shell: C:\\cygwin64\\bin\\bash.exe --login -eo pipefail
          command: |
            CIRCLE_WORKING_DIRECTORY=$(eval "echo $CIRCLE_WORKING_DIRECTORY")
            cd $CIRCLE_WORKING_DIRECTORY
            git clone << pipeline.parameters.src-repo-url >> --recurse-submodules
            cd Super-2021-Swadge-FW-Sandbox/firmware
            unset ESP_GDB && export SET_SWADGE_VERSION=2 && make -C emu all
            echo $(date) >> version.txt && echo "https://github.com/AEFeinstein/Super-2021-Swadge-FW-Sandbox/commit/${CIRCLE_SHA1}" >> version.txt
            zip << windows-artifact >> -j emu/swadgemu.exe emu/assets.bin version.txt /bin/cygwin1.dll
      - store_artifacts:
          path: Super-2021-Swadge-FW-Sandbox\\firmware\\<< windows-artifact >>
# Slack notifications don't work from the windows environment, so just make the windows build a prerequisite for the esp8266 build
#     - slack/status:
#         fail_only: false
#         success_message: ':windows95: Get a fresh, hot emulator here: https://${CIRCLE_BUILD_NUM}-236183421-gh.circle-artifacts.com/0/Super-2021-Swadge-FW-Sandbox/firmware/<< parameters.label >>.zip'

workflows:
  version: 2
  build-firmware-windows:
    jobs:
      - build-windows:
      - build-firmware:
          requires:
            - build-windows
